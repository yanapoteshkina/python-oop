#КЛАСС КАК ПРОСТРАНСТВО ИМЕН

#Свойства и методы в классе явялются атрибутами класса
# при создании экземпляра класса атрибутты класса не копируются в экземпляр но атрибуты класса явялются общими для всех его экземпляров
#через экземпляры мы можем абсолютно спокойно обращаться к атрибуто класса

class Point:
    MAX_COORD = 100
    MIN_COORD = 0

    def __init__(self, x,y):
        self.x = x
        self.y = y

    def set_coord(self, x, y):
        if self.MIN_COORD <= x <= self.MAX_COORD:
            self.x = x
            self.y = y


    #это ошибочный способ поменять значения у атрибутта класса
        # т.к такой метод просто создасть значение атрибута в локольной области видимости
        # то есть значение основного атрибута не поменяется
        # def set_bound(self, left):
        #self.MIN_COORD = left

    #вот это правильный вариант реализации - изменить значение атриута класса
    #используем декоратор класса и ссылка на основной класс cls
    @classmethod
    def set_bound(cls, left):
        cls.MIN_COORD = left

pt1 = Point(1, 2)

print(pt1.MAX_COORD)
pt1.set_bound(190)
print(Point.__dict__)
print(pt1.__dict__)